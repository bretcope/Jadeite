// todos
	- Add mixin call
	- Filters
	- Add include to lexer
	- Add extends to lexer

- Terminals are camelCase or literal symbols
- Non-terminals are PascalCase
- A grammar element followed by "_opt" is optional, and can resolve to Îµ

--- TERMINALS --------------------------------------------

Significant Whitespace
	EndOfInput endOfInput
	Indent indent
	Outdent outdent
	EndOfLine endOfLine

Templating Kewords
	AppendKeyword append
	BlockKeyword block
	DoctypeKeyword doctype
	ExtendsKeyword extends
	IncludeKeyword include
	MixinKeyword mixin
	PrependKeyword prepend

Code Keywords
	AttributesKeyword attributes
	BreakKeyword break
	CaseKeyword case
	ConstKeyword const
	ContinueKeyword continue
	DefaultKeyword default
	ElseKeyword else
	FalseKeyword false
	ForKeyword for
	ForeachKeyword foreach
	FuncKeyword func
	IfKeyword if
	InKeyword in
	ModelKeyword model
	NullKeyword null
	ReturnKeyword return
	SwitchKeyword switch
	TrueKeyword true
	VarKeyword var
	WhileKeyword while

Type Keywords
	BoolKeyword bool
	ByteKeyword byte
	CharKeyword char
	DoubleKeyword double
	IntKeyword int
	LongKeyword long
	SbyteKeyword sbyte
	ShortKeyword short
	StringKeyword string
	UintKeyword uint
	UlongKeyword ulong
	UshortKeywordKeywordKeyword ushort  

Templating Elements
	BufferedHtmlComment bufferedHtmlComment
	UnbufferedHtmlComment unbufferedHtmlComment
	HtmlIdentifier htmlIdentifier
	HtmlText htmlText

Code Elements
	CharLiteral charLiteral
	CodeComment codeComment
	CodeIdentifier codeIdentifier
	IntegerLiteral integerLiteral
	FloatingPointLiteral floatingPointLiteral
	StringLiteral stringLiteral

Punctuation and Operators
	Hash #
	Dot .
	Pipe |
	PipePipe ||
	PipeEquals |=
	And &
	AndAnd &&
	AndEquals &=
	Caret ^
	CaretEquals ^=
	Plus +
	PlusPlus ++
	PlusEquals +=
	Minus -
	MinusMinus --
	MinusEquals -=
	Asterisk *
	Asterisk *=
	ForwardSlash /
	ForwardSlashEquals /=
	Percent %
	PercentEquals %=
	Equals =
	EqualsEquals ==
	LessThan <
	LessThanLessThan <<
	LessThanEquals <=
	LessThanLessThanEquals <<=
	GreaterThan >
	GreaterThanGreaterThan >>
	GreaterThanEquals >=
	GreaterThanGreaterThanEquals >>=
	Comma ,
	SemiColon ;
	Bang !
	BangEquals !=
	QuestionMark ?
	Colon :
	OpenParen (
	CloseParen )
	OpenEscapedInterpolation #{
	OpenUnescapedInterpolation !{
	OpenCurly {
	CloseCurly }
	OpenTagInterpolation #[
	OpenSquareBracket [
	CloseSquareBracket ]

--- TEMPLATE NON-TERMINALS -------------------------------

Start
	EndOfLineList_opt File endOfInput
	
EndOfLineList
	endOfLine EndOfLineList
	endOfLine

File
	Template MixinList_opt

Template
	ModelDefinition Document

ModelDefinition
	model TypeIdentifier endOfLine

Document
	EndOfLineList_opt ExtendsDefinition_opt DocumentBody

ExtendsDefinition
	extends ( ArgumentList )  // expecting params (string viewName, object viewModel)

DocumentBody
	DocumentBodyElement DocumentBody
	DocumentBodyElement

DocumentBodyElement
	DoctypeDefinition
	NamedBlock
	IncludeDefinition
	BufferedCode
	UnescapedBufferedCode
	UnbufferedCode
	DocumentBlock
	HtmlComment
	Tag
	endOfLine

DoctypeDefinition
	doctype TextBodyElementList endOfLine

NamedBlock
	NamedBlockPrefix htmlIdentifier endOfLine DocumentBlock_opt

NamedBlockPrefix
	block append
	block prepend
	block
	append
	prepend

IncludeDefinition
	include ( ArgumentList )  // expecting params (string viewName, object viewModel)

DocumentBlock
	indent DocumentBody outdent

Tag
	TagElementDeclaration TagAttributes_opt AndAttributes_opt TagBody

TagElementDeclaration
	htmlIdentifier ClassOrIdList_opt
	ClassOrIdList

ClassOrIdList
	ClassOrId ClassOrIdList
	ClassOrId

ClassOrId
	. htmlIdentifier  // class name
	# htmlIdentifier  // ID

TagAttributes
	( TagAttributesList_opt )

TagAttributesList
	TagAttribute , TagAttributesList
	TagAttribute

TagAttribute
	htmlIdentifier = Expression
	htmlIdentifier != Expression
	htmlIdentifier

AndAttributes
	&attributes ( CodeIdentifierList_opt )

TagBody
	: Tag                                                // tag expansion
	. endofLine PipelessTextBlock_opt                    // pipeless text
	BufferedCode DocumentBlock_opt                       // escaped buffered code
	UnescapedBufferedCode DocumentBlock_opt              // unescaped buffered code
	TextBodyElementList_opt endOfLine DocumentBlock_opt  // normal body
	/ endOfLine                                          // self-closing tag

PipelessTextBlock
	indent TextBodyElementList outdent

BufferedCode
	= Expression endOfLine

UnescapedBufferedCode
	!= Expression endOfLine

UnbufferedCode
	-_opt Statement

HtmlComment
	bufferedHtmlComment endOfLine
	unbufferedHtmlComment endOfLine

TextBodyElementList
	TextBodyElement TextBodyElementList
	TextBodyElement

TextBodyElement
	htmlText
	InterpolatedTag
	EscapedInterpolatedExpression
	UnescapedInterpolatedExpression

InterpolatedTag
	#[ InterpolatedTagDefinition ]

InterpolatedTagDefinition
	TagElementDeclaration TagAttributes_opt InterpolatedTagBody_opt

InterpolatedTagBody
	: InterpolatedTagDefinition   // tag expansion
	= Expression                  // escaped buffered code
	!= Expression                 // unescaped buffered code
	TextBodyElementList           // normal body
	/                             // self-closing tag

EscapedInterpolatedExpression
	#{ Expression }

UnescapedInterpolatedExpression
	!{ Expression }

MixinList
	MixinDefinition MixinList
	MixinDefinition

MixinDefinition
	mixin htmlIdentifier MixinParametersDefinition_opt DocumentBlock

MixinParametersDefinition
	( CodeIdentifierList_opt )
	
--- TYPES ------------------------------------------------

BuiltInType
	bool
	NumericType
	string

NumericType
	IntegerType
	FloatingPointType

IntegerType
	sbyte
	byte
	short
	ushort
	int
	uint
	long
	ulong
	char

FloatingPointType
	double

TypeIdentifier
	codeIdentifier . TypeIdentifier
	BuiltInType . TypeIdentifier
	codeIdentifier
	BuiltInType

--- EXPRESSIONS ------------------------------------------

Literal
	BooleanLiteral
	charLiteral
	NumericLiteral
	stringLiteral
	null

BooleanLiteral
	true
	false

NumericLiteral
	integerLiteral
	floatingPointLiteral

ArgumentList
	Expression , ArgumentList
	Expression

Expression
	NonAssignmentExpression
	Assignment

NonAssignmentExpression
	ConditionalExpression

ExpressionList
	Expression , ExpressionList
	Expression

PrimaryExpression
	Literal
	codeIdentifier
	model
	attributes
	ParenthesizedExpression
	MemberAccess
	InvocationExpression
	ElementAccess
	PostIncrementExpression
	PostDecrementExpression

ParenthesizedExpression
	( Expression )

MemberAccess
	PrimaryExpression . codeIdentifier

ElementAccess
	PrimaryExpression [ ArgumentList ]

Assignment
	AssignmentTarget AssignmentOperator Expression

AssignmentOperator
	=
	+=
	-=
	*=
	/=
	%=
	&=
	|=
	^=
	<<=
	>>=

InvocationExpression
	PrimaryExpression ( ArgumentList_opt )

PostIncrementExpression
	PrimaryExpression ++

PostDecrementExpression
	PrimaryExpression--

UnaryExpression
	PrimaryExpression
	+ UnaryExpression
	- UnaryExpression
	! UnaryExpression
	~ UnaryExpression
	PreIncrementExpression
	PreDecrementExpression
	CastExpression

PreIncrementExpression
	++ UnaryExpression

PreDecrementExpression
	-- UnaryExpression

CastExpression
	( NumericType ) UnaryExpression

MultiplicativeExpression
	UnaryExpression
	MultiplicativeExpression * UnaryExpression
	MultiplicativeExpression / UnaryExpression
	MultiplicativeExpression % UnaryExpression

AdditiveExpression
	MultiplicativeExpression
	AdditiveExpression + MultiplicativeExpression
	AdditiveExpression - MultiplicativeExpression

ShiftExpression
	AdditiveExpression
	ShiftExpression << AdditiveExpression
	ShiftExpression >> AdditiveExpression

RelationalExpression
	ShiftExpression
	RelationalExpression < ShiftExpression
	RelationalExpression > ShiftExpression
	RelationalExpression <= ShiftExpression
	RelationalExpression >= ShiftExpression

EqualityExpression
	RelationalExpression
	EqualityExpression == RelationalExpression
	EqualityExpression != RelationalExpression

AndExpression
	EqualityExpression
	AndExpression & EqualityExpression

XorExpression
	AndExpression
	XorExpression ^ AndExpression

OrExpression
	XorExpression
	OrExpression | XorExpression

ConditionalAndExpression
	OrExpression
	ConditionalAndExpression && OrExpression

ConditionalOrExpression
	ConditionalAndExpression
	ConditionalOrExpression || ConditionalAndExpression

NullCoalescingExpression
	ConditionalOrExpression
	ConditionalOrExpression ?? NullCoalescingExpression

ConditionalExpression
	NullCoalescingExpression
	NullCoalescingExpression ? Expression : Expression

--- STATEMENTS -------------------------------------------

Statement
	StatementExpression endOfLine
	SelectionStatement
	IterationStatement
	JumpStatement

StatementList
	Statement StatementList
	Statement

DeclarationStatement
	LocalVariableDeclaration
	LocalConstantDeclaration

StatementExpression
	InvocationExpression
	Assignment
	PostIncrementExpression
	PostDecrementExpression
	PreIncrementExpression
	PreDecrementExpression

SelectionStatement
	IfStatement
	SwitchStatement

IfStatement
	if Expression endOfLine DocumentBlock ElseStatement_opt

ElseStatement
	else IfStatement
	else endOfLine DocumentBlock

SwitchStatement
	switch Expression endOfLine SwitchBody

SwitchBody
	indent SwitchSectionList outdent

SwitchSectionList
	SwitchSection SwitchSectionList
	SwitchSection

SwitchSection
	SwitchLabelList DocumentBlock

SwitchLabelList
	SwitchLabel SwitchLabelList
	SwitchLabel

SwitchLabel
	case ExpressionList endOfLine
	default endOfLine

IterationStatement
	WhileStatement
	ForeachStatement
	ForStatement

WhileStatement
	while Expression_opt endOfLine DocumentBlock

ForeachStatement
	foreach AssignmentTarget in Expression endOfLine DocumentBlock

ForStatement
	for ForInitializer_opt ; Expression ; ForIterator_opt endOfLine DocumentBlock

ForInitializer
	LocalVariableDeclaration
	StatementExpressionList

ForIterator
	StatementExpressionList

StatementExpressionList
	StatementExpression , StatementExpressionList
	StatementExpression

JumpStatement
	BreakStatement
	ContinueStatement
	ReturnStatement

BreakStatement
	break endOfLine

ContinueStatement
	continue endOfLine

ReturnStatement
	return ExpressionList_opt endOfLine

AssignmentTarget
	codeIdentifier
	SingleVariableDeclaration
	MultipleVariableDeclaration
	( IdentifierOrDeclarationList )

IdentifierOrDeclarationList
	IdentifierOrDeclaration , IdentifierOrDeclarationList
	IdentifierOrDeclaration

IdentifierOrDeclaration
	codeIdentifier
	SingleVariableDeclaration

SingleVariableDeclaration
	var codeIdentifier

MultipleVariableDeclaration
	var ( CodeIdentifierList )

CodeIdentifierList
	codeIdentifier , CodeIdentifierList
	codeIdentifier
