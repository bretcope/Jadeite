// todos
	- Add mixin call
	- Filters
	- Add include to lexer
	- Add extends to lexer

- Terminals are camelCase or literal symbols
- Non-terminals are PascalCase
- A grammar element followed by "_opt" is optional, and can resolve to Îµ

--- TERMINALS --------------------------------------------

Significant Whitespace
	endOfInput
	endOfLine
	indent
	outdent

Templating Kewords
	append
	block
	doctype
	extends
	include
	mixin
	prepend

Code Keywords
	attributes
	break
	case
	const
	continue
	default
	else
	false
	for
	foreach
	func
	if
	in
	model
	null
	return
	switch
	true
	var
	while

Type Keywords
	bool
	byte
	char
	double
	int
	long
	sbyte
	short
	string
	uint
	ulong
	ushort

Templating Elements
	bufferedHtmlComment
	unbufferedHtmlComment
	htmlIdentifier
	htmlText

Code Elements
	charLiteral
	codeComment
	codeIdentifier
	integerLiteral
	floatingPointLiteral
	stringLiteral

Punctuation
	#
	.
	|
	||
	|=
	&
	&&
	&=
	^
	^=
	+
	++
	+=
	-
	--
	-=
	*
	*=
	/
	/=
	%
	%=
	=
	==
	<
	<<
	<=
	<<=
	>
	>>
	>=
	>>=
	,
	;
	!
	!=
	?
	:
	(
	)
	#{
	!{
	{
	}
	#[
	[
	]

--- TEMPLATE NON-TERMINALS -------------------------------

File
	Template_opt MixinList_opt endOfInput

Template
	ModelDefinition Document

ModelDefinition
	endOfLine ModelDefinition
	model codeIdentifier endOfLine

Document
	ExtendsDefinition_opt DocumentBody

ExtendsDefinition
	extends ( ArgumentList )  // expecting params (string viewName, object viewModel)

DocumentBody
	DocumentBodyElement DocumentBody
	DocumentBodyElement

DocumentBodyElement
	DoctypeDefinition
	NamedBlock
	IncludeDefinition
	BufferedCode
	UnescapedBufferedCode
	UnbufferedCode
	DocumentBlock
	HtmlComment
	Tag
	endOfLine

DoctypeDefinition
	doctype TextBodyElementList endOfLine

NamedBlock
	NamedBlockPrefix htmlIdentifier endOfLine DocumentBlock_opt

NamedBlockPrefix
	block append
	block prepend
	block
	append
	prepend

IncludeDefinition
	include ( ArgumentList )  // expecting params (string viewName, object viewModel)

DocumentBlock
	indent DocumentBody outdent

Tag
	TagElementDeclaration TagAttributes_opt AndAttributes_opt TagBody

TagElementDeclaration
	htmlIdentifier ClassOrIdList_opt
	ClassOrIdList

ClassOrIdList
	ClassOrId ClassOrIdList
	ClassOrId

ClassOrId
	. htmlIdentifier  // class name
	# htmlIdentifier  // ID

TagAttributes
	( TagAttributesList_opt )

TagAttributesList
	TagAttribute , TagAttributesList
	TagAttribute

TagAttribute
	htmlIdentifier = Expression
	htmlIdentifier != Expression
	htmlIdentifier

AndAttributes
	&attributes ( CodeIdentifierList_opt )

TagBody
	: Tag                                                // tag expansion
	. endofLine PipelessTextBlock_opt                    // pipeless text
	BufferedCode DocumentBlock_opt                       // escaped buffered code
	UnescapedBufferedCode DocumentBlock_opt              // unescaped buffered code
	TextBodyElementList_opt endOfLine DocumentBlock_opt  // normal body
	/ endOfLine                                          // self-closing tag

PipelessTextBlock
	indent TextBodyElementList outdent

BufferedCode
	= Expression endOfLine

UnescapedBufferedCode
	!= Expression endOfLine

UnbufferedCode
	- endOfLine UnbufferedCodeBlock
	-_opt Statement

UnbufferedCodeBlock
	indent StatementList outdent

HtmlComment
	bufferedHtmlComment endOfLine
	unbufferedHtmlComment endOfLine

TextBodyElementList
	TextBodyElement
	TextBodyElement TextBodyElementList

TextBodyElement
	htmlText
	#[ InterpolatedTagDefinition ]   // interpolated tag
	#{ Expression }                  // interpolated escaped buffered code
	!{ Expression }                  // interpolated unescaped buffered code

InterpolatedTag
	#[ InterpolatedTagDefinition ]

InterpolatedTagDefinition
	TagElementDeclaration TagAttributes_opt InterpolatedTagBody_opt

InterpolatedTagBody
	: InterpolatedTagDefinition   // tag expansion
	= Expression                  // escaped buffered code
	!= Expression                 // unescaped buffered code
	TextBodyElementList           // normal body
	/                             // self-closing tag

MixinList
	MixinDefinition MixinList
	MixinDefinition

MixinDefinition
	endOfLine MixinDefinition
	mixin htmlIdentifier MixinParametersDefinition_opt DocumentBlock

MixinParametersDefinition
	( CodeIdentifierList_opt )
	
--- TYPES ------------------------------------------------

BuiltInType
	bool
	NumericType
	string

NumericType
	IntegerType
	FloatingPointType

IntegerType
	sbyte
	byte
	short
	ushort
	int
	uint
	long
	ulong
	char

FloatingPointType
	double

--- EXPRESSIONS ------------------------------------------

Literal
	BooleanLiteral
	charLiteral
	NumericLiteral
	stringLiteral

BooleanLiteral
	true
	false

NumericLiteral
	integerLiteral
	floatingPointLiteral
	
ArgumentList
	Expression , ArgumentList
	Expression

Expression
	NonAssignmentExpression
	Assignment

NonAssignmentExpression
	ConditionalExpression

ExpressionList
	Expression , ExpressionList
	Expression

PrimaryExpression
	Literal
	codeIdentifier
	model
	ParenthesizedExpression
	MemberAccess
	InvocationExpression
	ElementAccess
	PostIncrementExpression
	PostDecrementExpression

ParenthesizedExpression
	( Expression )

MemberAccess
	PrimaryExpression . codeIdentifier

ElementAccess
	PrimaryExpression [ ArgumentList ]

Assignment
	UnaryExpression AssignmentOperator Expression

AssignmentOperator
	=
	+=
	-=
	*=
	/=
	%=
	&=
	|=
	^=
	<<=
	>>=

InvocationExpression
	PrimaryExpression ( ArgumentList_opt )

PostIncrementExpression
	PrimaryExpression ++

PostDecrementExpression
	PrimaryExpression--

UnaryExpression
	PrimaryExpression
	+ UnaryExpression
	- UnaryExpression
	! UnaryExpression
	~ UnaryExpression
	PreIncrementExpression
	PreDecrementExpression
	CastExpression

PreIncrementExpression
	++ UnaryExpression

PreDecrementExpression
	-- UnaryExpression

CastExpression
	( NumericType ) UnaryExpression

MultiplicativeExpression
	UnaryExpression
	MultiplicativeExpression * UnaryExpression
	MultiplicativeExpression / UnaryExpression
	MultiplicativeExpression % UnaryExpression

AdditiveExpression
	MultiplicativeExpression
	AdditiveExpression + MultiplicativeExpression
	AdditiveExpression - MultiplicativeExpression

ShiftExpression
	AdditiveExpression
	ShiftExpression << AdditiveExpression
	ShiftExpression >> AdditiveExpression

RelationalExpression
	ShiftExpression
	RelationalExpression < ShiftExpression
	RelationalExpression > ShiftExpression
	RelationalExpression <= ShiftExpression
	RelationalExpression >= ShiftExpression

EqualityExpression
	RelationalExpression
	EqualityExpression == RelationalExpression
	EqualityExpression != RelationalExpression

AndExpression
	EqualityExpression
	AndExpression & EqualityExpression

XorExpression
	AndExpression
	XorExpression ^ AndExpression

OrExpression
	XorExpression
	OrExpression | XorExpression

ConditionalAndExpression
	OrExpression
	ConditionalAndExpression && OrExpression

ConditionalOrExpression
	ConditionalAndExpression
	ConditionalOrExpression || ConditionalAndExpression

NullCoalescingExpression
	ConditionalOrExpression
	ConditionalOrExpression ?? NullCoalescingExpression

ConditionalExpression
	NullCoalescingExpression
	NullCoalescingExpression ? Expression : Expression

--- STATEMENTS -------------------------------------------

Statement
	StatementExpression endOfLine
	SelectionStatement
	IterationStatement
	JumpStatement

StatementList
	Statement StatementList
	Statement

DeclarationStatement
	LocalVariableDeclaration
	LocalConstantDeclaration

StatementExpression
	InvocationExpression
	Assignment
	PostIncrementExpression
	PostDecrementExpression
	PreIncrementExpression
	PreDecrementExpression

SelectionStatement
	IfStatement
	SwitchStatement

IfStatement
	if Expression endOfLine DocumentBlock ElseStatement_opt

ElseStatement
	else IfStatement
	else endOfLine DocumentBlock

SwitchStatement
	switch Expression endOfLine SwitchBody

SwitchBody
	indent SwitchSectionList outdent

SwitchSectionList
	SwitchSection SwitchSectionList
	SwitchSection

SwitchSection
	SwitchLabelList DocumentBlock

SwitchLabelList
	SwitchLabel SwitchLabelList
	SwitchLabel

SwitchLabel
	case ExpressionList endOfLine
	default endOfLine

IterationStatement
	WhileStatement
	ForeachStatement
	ForStatement

WhileStatement
	while Expression_opt endOfLine DocumentBlock

ForeachStatement
	foreach AssignmentTarget in Expression endOfLine DocumentBlock

ForStatement
	for ForInitializer_opt ; Expression ; ForIterator_opt endOfLine DocumentBlock

ForInitializer
	LocalVariableDeclaration
	StatementExpressionList

ForIterator
	StatementExpressionList

StatementExpressionList
	StatementExpression , StatementExpressionList
	StatementExpression

JumpStatement
	BreakStatement
	ContinueStatement
	ReturnStatement

BreakStatement
	break endOfLine

ContinueStatement
	continue endOfLine

ReturnStatement
	return ExpressionList_opt endOfLine

AssignmentTarget
	codeIdentifier
	SingleVariableDeclaration
	MultipleVariableDeclaration
	( IdentifierOrDeclarationList )

IdentifierOrDeclarationList
	IdentifierOrDeclaration , IdentifierOrDeclarationList
	IdentifierOrDeclaration

IdentifierOrDeclaration
	codeIdentifier
	SingleVariableDeclaration

SingleVariableDeclaration
	var codeIdentifier

MultipleVariableDeclaration
	var ( CodeIdentifierList )

CodeIdentifierList
	codeIdentifier , CodeIdentifierList
	codeIdentifier
